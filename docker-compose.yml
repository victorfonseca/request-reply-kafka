version: '3.2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      - kafkanet 

  schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8081:8081
    networks:
      - kafkanet 
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

  rest-proxy:
    image: confluentinc/cp-kafka-rest
    container_name: rest-proxy
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    ports:
      - 8082:8082
    networks:
      - kafkanet 
    hostname: rest-proxy
    container_name: rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka:9092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9094:9094
      - 9092:9092
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_PORT: 9092
      KAFKA_CREATE_TOPICS: "requesttopic:1:1,replytopic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_JMX_PORT: 7071
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
    networks:
      - kafkanet 

  kafkadrop:
    image: obsidiandynamics/kafdrop
    container_name: kafkadrop
    ports:
      - 9000:9000
    networks:
      - kafkanet
    depends_on:
      - zookeeper
      - kafka
    links:
      - kafka  
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
      
  producer:
    image: producer
    build: ./producer
    container_name: producer
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    links:
      - kafka      
    depends_on:      
      - kafka     
    ports:
      - '2035:2035'    
    networks:
      - kafkanet 
      
  consumer:
    image: consumer
    build: ./consumer
    container_name: consumer
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    links:
      - kafka      
    depends_on:      
      - kafka     
    ports:
      - '2036:2036'    
    networks:
      - kafkanet       
        
networks:
  kafkanet:
    driver: bridge